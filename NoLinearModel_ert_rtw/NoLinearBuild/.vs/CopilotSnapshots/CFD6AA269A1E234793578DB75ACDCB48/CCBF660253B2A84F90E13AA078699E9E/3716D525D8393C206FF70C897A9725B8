#pragma once  
#include <stdio.h>              // This example main program uses printf/fflush  
#include <chrono>
#include <thread>
#include <vector>
#include "../NoLinearModel_ert_rtw/NoLinearModel.h"    

class Simulator  
{  
    // Parameters 
public:
    NoLinearModel rtObj;
	NoLinearModel::ExtY rtY; // External outputs
	NoLinearModel::InstP rtInstP; // Instance parameters
	// Input vector based simulation
	std::vector< NoLinearModel::ExtY> rtY_vector; // Vector to hold external outputs for input vector based simulation
	bool is_real_time; // Flag to indicate if the simulation is real-time
	double base_rate; // Base rate in seconds for real-time simulation
	int simulation_time; // Total simulation time in seconds
private:
	int step_count; // Number of steps to run in non-real-time mode

    // Methods
public:
	Simulator(void);

	void initialize(void);

    void rt_OneStep(void);

	void run();

    void run_real_time(void);

	void run_non_real_time(void);

	void run_input_vector_based(const std::vector<double>& upitch,
                                const std::vector<double>& uroll = std::vector<double>(),
                                const std::vector<double>& uzp = std::vector<double>(),
                                const std::vector<double>& uyaw = std::vector<double>());

};

